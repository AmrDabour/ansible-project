---
# Simple Note-Taking App Deployment
# No roles, no templates, just the basics!

- name: Deploy Simple Note-Taking App
  hosts: noteapp_servers
  become: true
  gather_facts: true
  
  vars:
    app_user: "noteapp"
    app_dir: "/opt/noteapp"
    
  tasks:
    # 1. Install required packages
    - name: Install Python, SQLite and essential packages
      yum:
        name:
          - python3
          - python3-pip
          - sqlite
        state: present
      
    # 2. Create application user
    - name: Create application user
      user:
        name: "{{ app_user }}"
        system: true
        home: "{{ app_dir }}"
        create_home: false
        
    # 3. Create application directory
    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'
        
    # 4. Copy advanced Python application file
    - name: Copy advanced Python application
      copy:
        src: frontend.py
        dest: "{{ app_dir }}/frontend.py"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'
        
    # 5. Copy requirements file
    - name: Copy requirements.txt
      copy:
        src: requirements.txt
        dest: "{{ app_dir }}/requirements.txt"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0644'
        
    # 6. Install Flask
    - name: Install Python requirements
      pip:
        requirements: "{{ app_dir }}/requirements.txt"
        executable: pip3
        
    # 7. Create systemd service file for advanced app
    - name: Create systemd service file for advanced app
      copy:
        content: |
          [Unit]
          Description=Advanced Note-Taking App
          After=network.target
          
          [Service]
          Type=simple
          User={{ app_user }}
          WorkingDirectory={{ app_dir }}
          Environment=FLASK_PORT=80
          Environment=DB_PATH={{ app_dir }}/notes.db
          ExecStart=/usr/bin/python3 {{ app_dir }}/frontend.py
          Restart=always
          RestartSec=3
          
          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/noteapp.service
        mode: '0644'
      notify: reload systemd
      
    # 8. Configure firewall for port 80
    - name: Allow HTTP traffic on port 80
      firewalld:
        service: http
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true
      
    # 9. Start and enable service
    - name: Start and enable noteapp service
      systemd:
        name: noteapp
        state: started
        enabled: true
        daemon_reload: true
        
    # 10. Check if app is running on port 80
    - name: Wait for application to start
      wait_for:
        port: 80
        delay: 5
        timeout: 30
      ignore_errors: true
      
  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: true
        
  post_tasks:
    - name: Show deployment success
      debug:
        msg: |
          ðŸŽ‰ Advanced Note-Taking App Deployed Successfully!
          
          âœ… Application URL: http://{{ ansible_default_ipv4.address }}
          âœ… Features: Interactive UI, Drag & Drop Notes, Real-time Search
          âœ… Database: SQLite at {{ app_dir }}/notes.db  
          âœ… Service: sudo systemctl status noteapp
          
          ðŸŒŸ Advanced Features:
          - Interactive floating note cards
          - Drag and drop interface
          - Beautiful animations and effects
          - Full CRUD operations via API
          - Responsive design
          
          Test it now: curl http://{{ ansible_default_ipv4.address }} 