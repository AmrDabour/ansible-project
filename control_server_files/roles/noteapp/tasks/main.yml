---
# Simple Note App Deployment from GitHub
- name: Update system packages
  yum:
    name: "*"
    state: latest
  when: ansible_os_family == "RedHat"

- name: Install required packages (RedHat/CentOS)
  yum:
    name:
      - git
      - python3
      - python3-pip
      - sqlite
    state: present
  when: ansible_os_family == "RedHat"

- name: Install required packages (Debian/Ubuntu)
  apt:
    name:
      - git
      - python3
      - python3-pip
      - sqlite3
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Create application directory
  file:
    path: "{{ app_dir }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: "0755"

- name: Clone Simple Note App from GitHub
  git:
    repo: "{{ repo_url }}"
    dest: "{{ app_dir }}"
    version: "{{ repo_branch }}"
    force: yes
  become_user: "{{ app_user }}"

- name: Install Python requirements
  pip:
    requirements: "{{ app_dir }}/requirements.txt"
    executable: pip3

- name: Make database setup scripts executable
  file:
    path: "{{ app_dir }}/{{ item }}"
    mode: "0755"
  loop:
    - sqlite.sh
    - mariadb.sh
    - backup.sh
    - restore.sh

- name: Setup SQLite database
  shell: "cd {{ app_dir }} && ./sqlite.sh"
  become_user: "{{ app_user }}"

- name: Create systemd service file
  copy:
    dest: "/etc/systemd/system/{{ app_name }}.service"
    content: |
      [Unit]
      Description=Simple Note App
      After=network.target
      
      [Service]
      Type=simple
      User={{ app_user }}
      WorkingDirectory={{ app_dir }}
      ExecStart=/usr/bin/python3 {{ app_dir }}/frontend.py
      Restart=always
      RestartSec=3
      Environment=FLASK_PORT={{ app_port }}
      
      [Install]
      WantedBy=multi-user.target

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Enable and start the note app service
  systemd:
    name: "{{ app_name }}"
    enabled: yes
    state: restarted

- name: Open firewall for the app (firewalld)
  firewalld:
    port: "{{ app_port }}/tcp"
    permanent: yes
    state: enabled
    immediate: yes
  ignore_errors: true

- name: Open firewall for the app (ufw)
  ufw:
    rule: allow
    port: "{{ app_port }}"
  ignore_errors: true

- name: Display deployment results
  debug:
    msg: |
      üéâ Simple Note App deployed successfully!
      üì± Access your app at: http://{{ ansible_default_ipv4.address }}:{{ app_port }}
      üîß Service: {{ app_name }}
      üìÅ Directory: {{ app_dir }}
      ‚ö†Ô∏è  Make sure your security group allows port {{ app_port }}
