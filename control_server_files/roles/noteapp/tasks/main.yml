---
# Simple Note App Deployment Role - Main Tasks
- name: Update system packages
  yum:
    name: "*"
    state: latest
      
- name: Install required packages
  yum:
    name: "{{ required_packages }}"
    state: present
        
- name: Create application directory
  file:
    path: "{{ app_dir }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: "{{ directory_mode }}"
        
- name: Clone the application repository
  git:
    repo: "{{ repo_url }}"
    dest: "{{ app_dir }}"
    force: "{{ force_clone }}"
  become_user: "{{ app_user }}"
      
- name: Install Python requirements
  pip:
    requirements: "{{ app_dir }}/requirements.txt"
    executable: "{{ pip_executable }}"

- name: Copy database setup script
  copy:
    src: setup_database.sh
    dest: "{{ app_dir }}/setup_database.sh"
    mode: "{{ script_mode }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
        
- name: Setup database
  shell: "cd {{ app_dir }} && ./{{ database_setup_script }}"
  become_user: "{{ app_user }}"
      
- name: Create systemd service file for the web app
  copy:
    dest: "/etc/systemd/system/{{ service_name }}.service"
    content: |
      [Unit]
      Description={{ service_description }}
      After=network.target
      
      [Service]
      Type=simple
      User={{ app_user }}
      WorkingDirectory={{ app_dir }}
      ExecStart={{ python_executable }} {{ app_dir }}/frontend.py
      Restart=always
      RestartSec=3
      Environment=FLASK_PORT={{ app_port }}
      
      [Install]
      WantedBy=multi-user.target
          
- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
        
- name: Enable and start the note app service
  systemd:
    name: "{{ service_name }}"
    enabled: "{{ enable_service }}"
    state: "{{ 'restarted' if restart_service else 'started' }}"
        
-
      
- name: Display service status
  systemd:
    name: "{{ service_name }}"
  register: service_status
      
- name: Show deployment results
  debug:
    msg: |
      ðŸŽ‰ Deployment completed!
      Service status: {{ service_status.status.ActiveState }}
      Access your app at: http://{{ server_ip }}:{{ app_port }}
      (Note: Make sure your EC2 security group allows HTTP traffic on port {{ app_port }})
